:root {
    background-color: #6CBCBE;
  }
  
body {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
}

#animation-box {
    width: 500px;
    height: 500px;
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;
}

#circles,
#bars {
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    /* 부모 div는 자식 요소의 크기만큼 첫 width가 설정되므로
    따로 margin 없이 width 크기만 넓게 지정하면 된다. */
    width: 100px;
    height: 100px;
}

.circle,
.bar {
      width: 10px;
      background-color: white;
}
    
.circle {
        height: 10px;
        border-radius: 50%;
        margin: 10px;
}

/* 요소 하나에(ex. circle 한 개) rotate를 부여하면,
그 요소 자체가 회전
but 그 요소를 이루는 전체 div에 rotate를 주면,
div 박스가 회전하면서 마치 내부 요소들이 공전하는 듯한 모션이 나옴.
중간 circle은 rotate를 해도 그 자리이므로 아무 움직임 없는 듯 보이고! */
#circles {
    animation: circlesTurn 10s ease-in-out infinite;
}

@keyframes circlesTurn {
    0% { 
        transform: rotate(0deg);
    }
    50% {
        transform: rotate(180deg);
    }
    100% {
        transform: rotate(180deg);
    }
}

/* 요소 하나씩 크기를 키우는 animation이므로
div 박스가 아니라 요소 하나하나를 선택해 애니메이션 적용 */
.bar {
    height: 50px;
    animation: barsWave 1s infinite;
}

@keyframes barsWave {
        0% {

        }
         30% {
            transform: scaleY(1.7);
        }
        60%, 100% {
            transform: scale(1);
        }
}
    
    #bars .bar:first-child {
        animation-delay: 0s;
    }

    #bars .bar:nth-child(2) {
        animation-delay: .1s;
    }

    #bars .bar:nth-child(3) {
        animation-delay: .2s;
    }

    #bars .bar:nth-child(4) {
        animation-delay: .3s;
    }

    #bars .bar:last-child {
        animation-delay: .4s;
    }